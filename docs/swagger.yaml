definitions:
  page.Sort:
    properties:
      direction:
        type: integer
      sort_name:
        type: string
    type: object
  protocol.ApiResponse-any:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
      message:
        type: string
    type: object
  request.RequestAddress:
    properties:
      detail:
        type: string
      street:
        type: string
      zip_code:
        type: string
    required:
    - detail
    - street
    - zip_code
    type: object
  request.RequestMenu:
    properties:
      description:
        type: string
      limit_count:
        type: string
      name:
        type: string
      origin:
        type: string
      possible:
        type: boolean
      price:
        type: integer
      store_id:
        type: string
    required:
    - description
    - name
    - origin
    - possible
    - price
    - store_id
    type: object
  request.RequestOrder:
    properties:
      customer_id:
        type: string
      menu_ids:
        items:
          type: string
        type: array
      ordered_addr:
        $ref: '#/definitions/request.RequestAddress'
      store_id:
        type: string
    required:
    - customer_id
    - menu_ids
    - ordered_addr
    - store_id
    type: object
  request.RequestPostReview:
    properties:
      content:
        type: string
      customer_id:
        type: string
      menu_id:
        type: string
      rating:
        type: integer
      store_id:
        type: string
    required:
    - content
    - customer_id
    - menu_id
    - rating
    - store_id
    type: object
  request.RequestPostStore:
    properties:
      address:
        $ref: '#/definitions/request.RequestAddress'
      name:
        type: string
      store_phone:
        type: string
      user_id:
        type: string
    required:
    - address
    - name
    - store_phone
    - user_id
    type: object
  request.RequestPutCustomerOrder:
    properties:
      customer_id:
        type: string
      menu_ids:
        items:
          type: string
        type: array
      order_id:
        type: string
      ordered_addr:
        $ref: '#/definitions/request.RequestAddress'
      store_id:
        type: string
    required:
    - customer_id
    - menu_ids
    - order_id
    - ordered_addr
    - store_id
    type: object
  request.RequestPutStore:
    properties:
      address:
        $ref: '#/definitions/request.RequestAddress'
      name:
        type: string
      recommend_menus:
        items:
          type: string
        type: array
      store_phone:
        type: string
      user_id:
        type: string
    required:
    - address
    - name
    - store_phone
    - user_id
    type: object
  request.RequestPutStoreOrder:
    properties:
      order_id:
        type: string
      status:
        type: string
    required:
    - order_id
    - status
    type: object
  request.RequestUser:
    properties:
      name:
        type: string
      nic_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      role:
        type: string
    required:
    - name
    - nic_name
    - password
    - phone_number
    - role
    type: object
info:
  contact: {}
paths:
  /app/v1/orders/order:
    get:
      consumes:
      - application/json
      description: 특정 주문기록을 볼 수 있다.
      parameters:
      - description: order-id
        in: query
        name: order-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Get order-record, return order-record by json.
      tags:
      - 주문기록
    post:
      consumes:
      - application/json
      description: 메뉴 주문을 할 수 있다.
      parameters:
      - description: RequestOrder JSON
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/request.RequestOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Post Order, return posted id by json.
      tags:
      - 주문기록
  /app/v1/orders/order/customer:
    put:
      consumes:
      - application/json
      description: 사용자가 주문을 변경 할 수 있다.
      parameters:
      - description: RequestPutCustomerOrder
        in: body
        name: RequestPutCustomerOrder
        required: true
        schema:
          $ref: '#/definitions/request.RequestPutCustomerOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Put order records in customer, return updated count by json.
      tags:
      - 주문기록
  /app/v1/orders/order/price:
    get:
      consumes:
      - application/json
      description: 선택한 메뉴들의 총 가격을 알 수 있다.
      parameters:
      - in: query
        items:
          type: string
        name: menu_ids
        type: array
      - in: query
        name: store_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Get selected menus total price, return total price by json.
      tags:
      - 주문기록
  /app/v1/orders/order/store:
    put:
      consumes:
      - application/json
      description: 가게에서 주문 상태를 변경 할 수 있다.
      parameters:
      - description: RequestPutStoreOrder
        in: body
        name: RequestPutStoreOrder
        required: true
        schema:
          $ref: '#/definitions/request.RequestPutStoreOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Put order records in store, return updated count by json.
      tags:
      - 주문기록
  /app/v1/orders/pages/customer:
    get:
      consumes:
      - application/json
      description: 특정 사용자의 주문기록들을 볼 수 있다.
      parameters:
      - description: customer-id
        in: query
        name: customer-id
        required: true
        type: string
      - in: query
        name: content_count
        type: integer
      - in: query
        name: current_page
        type: integer
      - description: sort-name
        in: query
        name: sort-name
        required: true
        type: string
      - description: description
        in: query
        name: description
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Get sorted pages customer order records, return order records
        by json.
      tags:
      - 주문기록
  /app/v1/orders/pages/store:
    get:
      consumes:
      - application/json
      description: 특정 가게의 주문기록들을 볼 수 있다.
      parameters:
      - description: store-id
        in: query
        name: store-id
        required: true
        type: string
      - in: query
        name: content_count
        type: integer
      - in: query
        name: current_page
        type: integer
      - description: sort-name
        in: query
        name: sort-name
        required: true
        type: string
      - description: description
        in: query
        name: description
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Get sorted pages store order records, return order records by
        json.
      tags:
      - 주문기록
  /app/v1/reviews/customer:
    get:
      consumes:
      - application/json
      description: 특정 사용자의 리뷰들을 볼 수 있다.
      parameters:
      - description: customer-id
        in: query
        name: customer-id
        required: true
        type: string
      - in: query
        name: content_count
        type: integer
      - in: query
        name: current_page
        type: integer
      - description: sort-name
        in: query
        name: sort-name
        required: true
        type: string
      - description: description
        in: query
        name: description
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Get sorted page menu reviews, return sorted page menu reviews
        by json.
      tags:
      - 메뉴리뷰
  /app/v1/reviews/menu:
    get:
      consumes:
      - application/json
      description: 특정 메뉴의 리뷰들을 볼 수 있다.
      parameters:
      - description: menu-id
        in: query
        name: menu-id
        required: true
        type: string
      - in: query
        name: content_count
        type: integer
      - in: query
        name: current_page
        type: integer
      - description: sort-name
        in: query
        name: sort-name
        required: true
        type: string
      - description: description
        in: query
        name: description
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Get sorted page menu reviews, return sorted page menu reviews
        by json.
      tags:
      - 메뉴리뷰
  /app/v1/reviews/review:
    post:
      consumes:
      - application/json
      description: 메뉴 리뷰를 작성 할 수 있다.
      parameters:
      - description: RequestPostReview JSON
        in: body
        name: RequestPostReview
        required: true
        schema:
          $ref: '#/definitions/request.RequestPostReview'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Post menu review, return saved id by json.
      tags:
      - 메뉴리뷰
  /app/v1/stores:
    get:
      consumes:
      - application/json
      description: 가게들 정보를 보여준다.
      parameters:
      - in: query
        name: content_count
        type: integer
      - in: query
        name: current_page
        type: integer
      - description: sort-name
        in: query
        name: sort-name
        required: true
        type: string
      - description: description
        in: query
        name: description
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Get store pages, return store pages data by json.
      tags:
      - 가게
  /app/v1/stores/store:
    get:
      consumes:
      - application/json
      description: 특정 가게의 정보를 보여준다.
      parameters:
      - description: store_id
        in: query
        name: store-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Get store, return store by json.
      tags:
      - 가게
    post:
      consumes:
      - application/json
      description: 가게정보를 등록 할 수 있다.
      parameters:
      - description: RequestPostStore JSON
        in: body
        name: RequestPostStore
        required: true
        schema:
          $ref: '#/definitions/request.RequestPostStore'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Post store, return posted id by json.
      tags:
      - 가게
    put:
      consumes:
      - application/json
      description: 가게를 수정할 수 있다.
      parameters:
      - description: store-id
        in: query
        name: store-id
        required: true
        type: string
      - description: RequestPutStore JSON
        in: body
        name: RequestPutStore
        required: true
        schema:
          $ref: '#/definitions/request.RequestPutStore'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Put store, return modify count by json.
      tags:
      - 가게
  /app/v1/stores/store/menus:
    get:
      consumes:
      - application/json
      description: 특정 가게 메뉴 리스트를 보여준다.
      parameters:
      - description: store-id
        in: query
        name: store-id
        required: true
        type: string
      - in: query
        name: content_count
        type: integer
      - in: query
        name: current_page
        type: integer
      - description: sort-name
        in: query
        name: sort-name
        required: true
        type: string
      - description: description
        in: query
        name: description
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Get sorted menu page, return sorted menu pages data by json.
      tags:
      - 가게
  /app/v1/stores/store/menus/menu:
    delete:
      consumes:
      - application/json
      description: 메뉴를 삭제할 수 있다.
      parameters:
      - description: menu-id
        in: query
        name: menu-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Delete menu, return deleted count by json.
      tags:
      - 가게
    post:
      consumes:
      - application/json
      description: 메뉴를 등록할 수 있다.
      parameters:
      - description: RequestMenu JSON
        in: body
        name: RequestMenu
        required: true
        schema:
          $ref: '#/definitions/request.RequestMenu'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Post menu, return saved id by json.
      tags:
      - 가게
    put:
      consumes:
      - application/json
      description: 메뉴를 수정할 수 있다.
      parameters:
      - description: menu-id
        in: query
        name: menu-id
        required: true
        type: string
      - description: RequestMenu JSON
        in: body
        name: RequestMenu
        required: true
        schema:
          $ref: '#/definitions/request.RequestMenu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Put menu, return updated count by json.
      tags:
      - 가게
  /app/v1/stores/store/recommends:
    get:
      consumes:
      - application/json
      description: 특정 가게의 추천 메뉴 상세 정보 보여준다.
      parameters:
      - description: store-id
        in: query
        name: store-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Get store and recommend menus, return store and recommend menus
        data by json.
      tags:
      - 가게
  /app/v1/users/user:
    delete:
      consumes:
      - application/json
      description: 사용자 정보를 삭제 할 수 있다.
      parameters:
      - description: user-id
        in: query
        name: user-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Delete user, return delete count by json.
      tags:
      - 사용자정보
    get:
      consumes:
      - application/json
      description: 사용자 정보를 보여준다.
      parameters:
      - description: user-id
        in: query
        name: user-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Get user, return user by json.
      tags:
      - 사용자정보
    post:
      consumes:
      - application/json
      description: 회원가입을 할 수 있다.
      parameters:
      - description: RequestUser JSON
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/request.RequestUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Post user, return saved id by json.
      tags:
      - 사용자정보
    put:
      consumes:
      - application/json
      description: 사용자 정보를 수정 할 수 있다.
      parameters:
      - description: user-id
        in: query
        name: user-id
        required: true
        type: string
      - description: RequestUser JSON
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.RequestUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Put user, return updated count by json.
      tags:
      - 사용자정보
  /home/info:
    get:
      consumes:
      - application/json
      description: App 에 대해 간략적인 정보를(소개) 제공해 준다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call App Information, return Info by json.
swagger: "2.0"
