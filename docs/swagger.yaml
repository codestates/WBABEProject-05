definitions:
  dom.Address:
    properties:
      detail:
        type: string
      street:
        type: string
      zipCode:
        type: string
    type: object
  dom.BaseTime:
    properties:
      created_at:
        type: string
      updated_at:
        type: string
    type: object
  dom.Menu:
    properties:
      baseTime:
        $ref: '#/definitions/dom.BaseTime'
      description:
        type: string
      id:
        type: string
      limitCount:
        description: |-
          OrderCount 총 주문수 --> 주문내역으로 확인하자
          LimitCount 한정수량 ex) "non" , "1", "10"
        type: string
      name:
        type: string
      origin:
        description: Origin 원산지
        type: string
      possible:
        type: boolean
      price:
        type: integer
    type: object
  entity.Store:
    properties:
      address:
        $ref: '#/definitions/dom.Address'
      baseTime:
        $ref: '#/definitions/dom.BaseTime'
      id:
        type: string
      menu:
        items:
          $ref: '#/definitions/dom.Menu'
        type: array
      name:
        type: string
      recommendMenus:
        items:
          $ref: '#/definitions/dom.Menu'
        type: array
      storePhone:
        type: string
      userId:
        type: string
    type: object
  info.Info:
    properties:
      author:
        type: string
      blog:
        type: string
      description:
        type: string
      name:
        type: string
      spec:
        items:
          type: string
        type: array
      version:
        type: string
    type: object
  protocol.ApiResponse-any:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
      message:
        type: string
    type: object
  protocol.ApiResponse-entity_Store:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/entity.Store'
      error:
        type: string
      message:
        type: string
    type: object
  protocol.ApiResponse-info_Info:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/info.Info'
      error:
        type: string
      message:
        type: string
    type: object
  protocol.RequestAddress:
    properties:
      detail:
        type: string
      street:
        type: string
      zip_code:
        type: string
    type: object
  protocol.RequestOrder:
    properties:
      customer_id:
        type: string
      menu_ids:
        items:
          type: string
        type: array
      ordered_addr:
        $ref: '#/definitions/protocol.RequestAddress'
      price:
        type: integer
      status:
        description: Status 접수중/접수취소/추가접수/접수중/조리중/배달중/배달완료
        type: string
      store_id:
        type: string
    type: object
  protocol.RequestPostMenu:
    properties:
      description:
        type: string
      limit_count:
        type: string
      name:
        type: string
      origin:
        type: string
      possible:
        type: boolean
      price:
        type: integer
      store_id:
        type: string
    required:
    - name
    - origin
    - possible
    - price
    - store_id
    type: object
  protocol.RequestPostStore:
    properties:
      address:
        $ref: '#/definitions/protocol.RequestAddress'
      name:
        type: string
      store_phone:
        type: string
      user_id:
        type: string
    type: object
  protocol.RequestPostUser:
    properties:
      name:
        type: string
      nic_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      role:
        type: string
    type: object
info:
  contact: {}
paths:
  /app/v1/orders:
    post:
      consumes:
      - application/json
      description: 메뉴 주문을 할 수 있다.
      parameters:
      - description: RequestOrder JSON
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/protocol.RequestOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Post Order, return posted id by json.
  /app/v1/stores:
    post:
      consumes:
      - application/json
      description: 가게정보를 등록 할 수 있다.
      parameters:
      - description: RequestPostStore JSON
        in: body
        name: store
        required: true
        schema:
          $ref: '#/definitions/protocol.RequestPostStore'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Post store, return posted id by json.
  /app/v1/stores/menu:
    delete:
      consumes:
      - application/json
      description: 메뉴를 삭제할 수 있다.
      parameters:
      - description: store-id
        in: query
        name: store-id
        required: true
        type: string
      - description: menu-id
        in: query
        name: menu-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Delete menu in store, return deleted count by json.
    post:
      consumes:
      - application/json
      description: 메뉴를 등록할 수 있다.
      parameters:
      - description: RequestPostMenu JSON
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/protocol.RequestPostMenu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Post menu in store, return saved id by json.
    put:
      consumes:
      - application/json
      description: 메뉴를 수정할 수 있다.
      parameters:
      - description: menu-id
        in: query
        name: menu-id
        required: true
        type: string
      - description: RequestPostMenu JSON
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/protocol.RequestPostMenu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Put menu, return updated count by json.
  /app/v1/stores/swag/store:
    get:
      consumes:
      - application/json
      description: 특정 store 의 모든 정보를 스웨거 테스트를 위해 보여준다.
      parameters:
      - description: store_id
        in: query
        name: store_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-entity_Store'
      summary: call Get store, return store by json.
  /app/v1/users/join:
    post:
      consumes:
      - application/json
      description: 회원가입을 할 수 있다.
      parameters:
      - description: RequestPostUser JSON
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/protocol.RequestPostUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-any'
      summary: call Post user, return saved id by json.
  /home/info:
    get:
      consumes:
      - application/json
      description: App 에 대해 간략적인 정보를(소개) 제공해 준다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.ApiResponse-info_Info'
      summary: call App Information, return Info by json.
swagger: "2.0"
